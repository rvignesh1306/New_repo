class Node:
    def __init__(self,value):
        self.value = value
        self.next = None
        
class Linkedlist:
    def __init__(self,value):
        new_node = Node(value)
        self.head = new_node
        self.tail = new_node
        self.length = 1
        
    def print_list(self):
        temp = self.head
        while temp is not None:
            print(temp.value)
            temp = temp.next
            
    def append(self,value):
        new_node = Node(value)
        if self.length == 0:
            self.head = new_node
            self.tail = new_node
        else:
            self.tail.next = new_node
            self.tail = new_node
        self.length += 1
        
    def pop(self):
        temp = self.head
        pre = self.head
        if self.length == 0:
            return None
        while temp.next is not None:
            pre = temp
            temp = temp.next
        self.tail = pre
        self.tail.next = None
        self.length -= 1
        if self.length == 1:
            self.head = None
            self.tail = None
        return temp
        
    def prepend(self,value):
        new_node = Node(value)
        if self.length == 0:
            self.head = new_node
            self.tail = new_node
        temp = self.head
        self.head = new_node
        self.head.next = temp
        self.length += 1
        
    def pop_first(self):
        if self.length == 0:
            return None
        temp = self.head
        self.head = self.head.next
        temp.next = None
        self.length -= 1
        if self.length == 0:
            self.tail = None
        
        return temp.value 
        
    def get(self,index):
        if index < 0 and index > self.length:
            return None
        temp = self.head
        for _ in range(index):
            temp = temp.next
            
        return temp
    
    def set(self,index,value):
        if index < 0 and index > self.length:
            return None
        temp = self.get(index)
        if temp:
            temp.value = value 
            return True
        return False

    def insert(self,index,value):
        if index < 0 and index > self.length:
            return None
        if index == 0:
            self.prepend(value)
        if index == self.length:
            self.append(value)
        new_node = Node(value)
        old_temp = self.get(index-1)
        new_temp = old_temp.next
        old_temp.next = new_node
        new_node.next = new_temp
        self.length += 1
    
    def remove(self,index):
        if index <0 and index > self.length:
            return None
        if index == 0:
            self.pop_first()
        if index == self.length:
            self.pop()
        pre = self.get(index-1)
        temp = pre.next
        pre.next = temp.next
        temp.next = None
        self.length -= 1
    
        return temp.value
    
    def reverse(self):
        temp = self.head
        self.head = self.tail
        self.tail = temp
        before = None
    
        for _ in range(self.length):
            after = temp.next
            temp.next = before
            before = temp
            temp = after                                                                              
            
            
        
        
        


my_list = Linkedlist(5)
my_list.append(4)
my_list.append(3)
my_list.prepend(2)
my_list.reverse()



my_list.print_list()

    