#double_linked_list
class Node:
    def __init__(self,value):
        self.value = value
        self.next = None
        self.prev = None
        
class Doublelinkedlist:
    def __init__(self,value):
        new_node = Node(value)
        self.head = new_node
        self.tail = new_node
        self.length = 1
        
    def print_list(self):
        temp = self.head
        while temp is not None:
            print(temp.value)
            temp = temp.next
            
    def append(self,value):
        new_node = Node(value)
        if self.length == 0:
            self.head = new_node
            self.tail = new_node
        temp = self.tail
        self.tail = new_node
        temp.next = new_node
        self.tail.prev = temp
        self.tail.next = None
        self.length += 1
        return True
        
    def pop(self):
        if self.length == 0:
            return None
        temp = self.tail
        self.tail = self.tail.prev
        self.tail = temp
        temp.next = None
        self.length -= 1
        
        return temp.value
        
    def prepend(self,value):
        new_node = Node(value)
        if self.length == 0:
            self.head = new_node
            self.tail = new_node
        temp = self.head
        self.head = new_node
        self.head.next = temp
        self.head.prev = None
        self.length += 1
        
        return True
        
    def pop_first(self):
        if self.length == 0:
            return None
        temp = self.head
        self.head = self.head.next
        self.head.pre = None
        temp.next = None
        self.length -= 1
        
        return temp.value
            
    def get(self,index):
        if index < 0 and index > self.length:
            return None
        temp = self.head
        if index < self.length / 2:
            for _ in range(index):
                temp = temp.next
        else:
            temp = self.tail
            for _ in range(self.length-1, index, -1):
                temp = temp.prev
            
        return temp
        
    def set(self,index,value):
        if index < 0 and index > self.length:
            return None
        temp = self.get(index)
        if temp:
            temp.value = value
            return True
        return False
            
    def insert(self,index,value):
        new_node = Node(value)
        if index < 0 and index > self.length:
            return None
        temp = self.get(index-1)
        after = temp.next
        temp.next = new_node
        new_node.prev = temp
        new_node.next = after
        after.prev = new_node
        self.length += 1
        
    def remove(self,index):
        if index < 0 and index > self.length:
            return None
        temp = self.get(index)
        temp.next.prev = temp.prev
        temp.prev.next = temp.next
        temp.next = None
        temp.prev = None
        self.length -= 1
        return temp.value
        
            
            
my_list = Doublelinkedlist(5)

my_list.append(6)
my_list.prepend(4)

my_list.set(1,2)
my_list.insert(1,7)
my_list.remove(3)

my_list.print_list()
    